mongo-connect(){
  mongo --port 27017 -u $1 -p $2 --authenticationDatabase "admin"
}

python-http(){
  chrome http://localhost:8000
  python3 -m http.server 8000
i}

xcat(){
	cat $1 | xclip -selection clipboard
}

p8(){
  gping 8.8.8.8
}

xpwd(){
  pwd | xclip -selection clipboard
}

nc(){
  nordvpn connect
}

nd(){
  nordvpn disconnect
}

ns(){
  nordvpn status
}

killswitch_enable(){
  nordvpn set killswitch enable
}

killswitch_disable(){
  nordvpn set killswitch disable 
}

xfile(){
  readlink -f $1 | xclip -selection clipboard 
}

python-venv(){
  python3 -m venv venv && . venv/bin/activate && pip install -U pip setuptools wheels &> /dev/null
}

pgres(){
  sudo su - postgres
}

gcloud-current-project(){
  gcloud config list --format 'value(core.project)' 2>/dev/null
}

gcloud-current-account(){
  gcloud config list --format 'value(core.account)' 2>/dev/null
}

set-executable(){
  sudo chmod uog+x $1
}

pupi(){
  poetry update && poetry install
}

pipb(){
  poetry install && poetry build 
}


poetry-lint(){
  poetry run mypy .
  poetry run black --line-length 79 -S .
  poetry run isort -w 79 .
  poetry run flakehell lint
  poetry run flake8 --ignore Q000
}

git-fix-author(){
  WRONG_EMAIL="mat.p.wasilewski@gmail.com"
  NEW_NAME="Mateusz Wasilewski"
  NEW_EMAIL="mateusz.wasilewski@biorelate.com"

  if [ "$GIT_COMMITTER_EMAIL" = "$WRONG_EMAIL" ]
  then
      export GIT_COMMITTER_NAME="$NEW_NAME"
      export GIT_COMMITTER_EMAIL="$NEW_EMAIL"
  fi
  if [ "$GIT_AUTHOR_EMAIL" = "$WRONG_EMAIL" ]
  then
      export GIT_AUTHOR_NAME="$NEW_NAME"
      export GIT_AUTHOR_EMAIL="$NEW_EMAIL"
  fi
}

git-amend-author-biorelate()
{
  AUTHOR=$(git show | grep Author)
  WRONG_AUTHOR="Author: santiagonasar <mat.p.wasilewski@gmail.com>"
  if [ "$WRONG_AUTHOR" = "$AUTHOR" ]; then
    git commit --amend --author="Mateusz Wasilewski <mateusz.wasilewski@biorelate.com>" --no-edit
    echo "fixed!"
  else
    echo "Not fixed!"
  fi  
  git rebase --continue
}

git-push-existing-repo()
{
  git remote add origin $1
  git branch -M main
  git push -u origin main
}

poetry-lint()
{
  poetry run black --line-length 79 -S .
  poetry run flakeheaven lint
  poetry run isort -w 79 --profile=black .
  poetry run mypy .
}

ports()
{
  sudo lsof -i -P -n | grep LISTEN
}

dcu()
{
  if [ "$1" = "--rebuild" ]
  then
    docker compose up --build --force-recreate --no-deps
  elif [ ! -z "$1" ]
  then
    echo "$1 not a correct argument; pass --rebuild or nothing"
  else
    docker compose up 
  fi
}

pvd()
{
  pyenv virtualenv-delete -f $1 
}


bats() {
    BATS_RUN_SKIPPED=true command bats *.bats
}


poetry-flakeheaven-plugins-install() {
  poetry add --group dev flake8-bugbear flake8-builtins flake8-comprehensions darglint flake8-docstrings flake8-eradicate flake8-isort flake8-mutable flake8-pytest-style flake8-spellcheck pep8-naming flake8-quotes flake8-commas
}

gauth() {
  gcloud auth login && gcloud auth application-default login
}
